#!/bin/bash

# API Testing Script for Ghanshyam Murti Bhandar Backend
# This script tests all major API endpoints

BASE_URL="http://localhost:5000/api"
ADMIN_TOKEN=""
USER_TOKEN=""
PRODUCT_ID=""
CATEGORY_ID=""
ORDER_ID=""

echo "ðŸš€ Starting API Tests for Ghanshyam Murti Bhandar Backend"
echo "=================================================="

# Test 1: Health Check
echo "ðŸ“‹ Test 1: Health Check"
curl -s -X GET "$BASE_URL/categories" | head -c 100
echo -e "\nâœ… Health check completed\n"

# Test 2: Create Admin User
echo "ðŸ“‹ Test 2: Create Admin User"
ADMIN_RESPONSE=$(curl -s -X POST "$BASE_URL/auth/signup" \
  -H "Content-Type: application/json" \
  -d '{
    "name": "Test Admin",
    "email": "admin@test.com",
    "password": "admin123",
    "role": "admin"
  }')

echo "Admin signup response: $ADMIN_RESPONSE"

# Extract admin token
ADMIN_TOKEN=$(echo $ADMIN_RESPONSE | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
echo "Admin Token: ${ADMIN_TOKEN:0:20}..."
echo -e "âœ… Admin user created\n"

# Test 3: Create Regular User
echo "ðŸ“‹ Test 3: Create Regular User"
USER_RESPONSE=$(curl -s -X POST "$BASE_URL/auth/signup" \
  -H "Content-Type: application/json" \
  -d '{
    "name": "Test User",
    "email": "user@test.com",
    "password": "user123",
    "role": "user"
  }')

echo "User signup response: $USER_RESPONSE"

# Extract user token
USER_TOKEN=$(echo $USER_RESPONSE | grep -o '"token":"[^"]*"' | cut -d'"' -f4)
echo "User Token: ${USER_TOKEN:0:20}..."
echo -e "âœ… Regular user created\n"

# Test 4: Admin Login
echo "ðŸ“‹ Test 4: Admin Login"
LOGIN_RESPONSE=$(curl -s -X POST "$BASE_URL/auth/login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "admin@test.com",
    "password": "admin123"
  }')

echo "Login response: $LOGIN_RESPONSE"
echo -e "âœ… Admin login tested\n"

# Test 5: Create Category (Admin)
echo "ðŸ“‹ Test 5: Create Category"
CATEGORY_RESPONSE=$(curl -s -X POST "$BASE_URL/categories" \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "name": "Test Category",
    "description": "A test category"
  }')

echo "Category creation response: $CATEGORY_RESPONSE"

# Extract category ID
CATEGORY_ID=$(echo $CATEGORY_RESPONSE | grep -o '"_id":"[^"]*"' | cut -d'"' -f4)
echo "Category ID: $CATEGORY_ID"
echo -e "âœ… Category created\n"

# Test 6: Get Categories
echo "ðŸ“‹ Test 6: Get Categories"
curl -s -X GET "$BASE_URL/categories" | head -c 200
echo -e "\nâœ… Categories retrieved\n"

# Test 7: Create Product (Admin)
echo "ðŸ“‹ Test 7: Create Product"
PRODUCT_RESPONSE=$(curl -s -X POST "$BASE_URL/products" \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d "{
    \"name\": \"Test Product\",
    \"description\": \"A test product\",
    \"price\": 999,
    \"originalPrice\": 1299,
    \"category\": \"$CATEGORY_ID\",
    \"stock\": 50,
    \"isActive\": true
  }")

echo "Product creation response: $PRODUCT_RESPONSE"

# Extract product ID
PRODUCT_ID=$(echo $PRODUCT_RESPONSE | grep -o '"_id":"[^"]*"' | cut -d'"' -f4)
echo "Product ID: $PRODUCT_ID"
echo -e "âœ… Product created\n"

# Test 8: Get Products
echo "ðŸ“‹ Test 8: Get Products"
curl -s -X GET "$BASE_URL/products" | head -c 200
echo -e "\nâœ… Products retrieved\n"

# Test 9: Add to Cart (User)
echo "ðŸ“‹ Test 9: Add to Cart"
CART_RESPONSE=$(curl -s -X POST "$BASE_URL/cart/add" \
  -H "Authorization: Bearer $USER_TOKEN" \
  -H "Content-Type: application/json" \
  -d "{
    \"productId\": \"$PRODUCT_ID\",
    \"quantity\": 2
  }")

echo "Add to cart response: $CART_RESPONSE"
echo -e "âœ… Item added to cart\n"

# Test 10: Get Cart
echo "ðŸ“‹ Test 10: Get Cart"
curl -s -X GET "$BASE_URL/cart" \
  -H "Authorization: Bearer $USER_TOKEN" | head -c 200
echo -e "\nâœ… Cart retrieved\n"

# Test 11: Add to Wishlist (User)
echo "ðŸ“‹ Test 11: Add to Wishlist"
WISHLIST_RESPONSE=$(curl -s -X POST "$BASE_URL/wishlist/add" \
  -H "Authorization: Bearer $USER_TOKEN" \
  -H "Content-Type: application/json" \
  -d "{
    \"productId\": \"$PRODUCT_ID\"
  }")

echo "Add to wishlist response: $WISHLIST_RESPONSE"
echo -e "âœ… Item added to wishlist\n"

# Test 12: Create Order (User)
echo "ðŸ“‹ Test 12: Create Order"
ORDER_RESPONSE=$(curl -s -X POST "$BASE_URL/orders" \
  -H "Authorization: Bearer $USER_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "address": {
      "street": "123 Test Street",
      "city": "Test City",
      "state": "Test State",
      "postalCode": "12345",
      "country": "India"
    },
    "paymentInfo": {
      "method": "cod"
    }
  }')

echo "Order creation response: $ORDER_RESPONSE"

# Extract order ID
ORDER_ID=$(echo $ORDER_RESPONSE | grep -o '"_id":"[^"]*"' | cut -d'"' -f4)
echo "Order ID: $ORDER_ID"
echo -e "âœ… Order created\n"

# Test 13: Get Orders (Admin)
echo "ðŸ“‹ Test 13: Get Orders (Admin)"
curl -s -X GET "$BASE_URL/orders" \
  -H "Authorization: Bearer $ADMIN_TOKEN" | head -c 200
echo -e "\nâœ… Orders retrieved by admin\n"

# Test 14: Get User Orders
echo "ðŸ“‹ Test 14: Get User Orders"
curl -s -X GET "$BASE_URL/orders/my-orders" \
  -H "Authorization: Bearer $USER_TOKEN" | head -c 200
echo -e "\nâœ… User orders retrieved\n"

# Test 15: Add Review (User)
echo "ðŸ“‹ Test 15: Add Review"
REVIEW_RESPONSE=$(curl -s -X POST "$BASE_URL/reviews" \
  -H "Authorization: Bearer $USER_TOKEN" \
  -H "Content-Type: application/json" \
  -d "{
    \"productId\": \"$PRODUCT_ID\",
    \"rating\": 5,
    \"comment\": \"Great product!\"
  }")

echo "Review creation response: $REVIEW_RESPONSE"
echo -e "âœ… Review added\n"

# Test 16: Get Product Reviews
echo "ðŸ“‹ Test 16: Get Product Reviews"
curl -s -X GET "$BASE_URL/reviews/product/$PRODUCT_ID" | head -c 200
echo -e "\nâœ… Product reviews retrieved\n"

# Test 17: Create Coupon (Admin)
echo "ðŸ“‹ Test 17: Create Coupon"
COUPON_RESPONSE=$(curl -s -X POST "$BASE_URL/coupons" \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "code": "SAVE20",
    "description": "Save 20% on all items",
    "discountType": "percentage",
    "discountValue": 20,
    "minimumOrderAmount": 500,
    "validFrom": "2024-01-01T00:00:00.000Z",
    "validUntil": "2024-12-31T23:59:59.999Z",
    "usageLimit": 100,
    "isActive": true
  }')

echo "Coupon creation response: $COUPON_RESPONSE"
echo -e "âœ… Coupon created\n"

# Test 18: Validate Coupon
echo "ðŸ“‹ Test 18: Validate Coupon"
VALIDATE_RESPONSE=$(curl -s -X POST "$BASE_URL/coupons/validate" \
  -H "Content-Type: application/json" \
  -d '{
    "code": "SAVE20",
    "orderAmount": 1000,
    "cartItems": []
  }')

echo "Coupon validation response: $VALIDATE_RESPONSE"
echo -e "âœ… Coupon validated\n"

# Test 19: Get Dashboard Stats (Admin)
echo "ðŸ“‹ Test 19: Get Dashboard Stats"
curl -s -X GET "$BASE_URL/admin/stats" \
  -H "Authorization: Bearer $ADMIN_TOKEN" | head -c 200
echo -e "\nâœ… Dashboard stats retrieved\n"

# Test 20: Get User Profile
echo "ðŸ“‹ Test 20: Get User Profile"
curl -s -X GET "$BASE_URL/auth/profile" \
  -H "Authorization: Bearer $USER_TOKEN" | head -c 200
echo -e "\nâœ… User profile retrieved\n"

# Test 21: Add User Address
echo "ðŸ“‹ Test 21: Add User Address"
ADDRESS_RESPONSE=$(curl -s -X POST "$BASE_URL/users/addresses" \
  -H "Authorization: Bearer $USER_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "street": "456 New Street",
    "city": "New City",
    "state": "New State",
    "postalCode": "67890",
    "country": "India",
    "isDefault": true
  }')

echo "Address creation response: $ADDRESS_RESPONSE"
echo -e "âœ… User address added\n"

# Test 22: Get Users (Admin)
echo "ðŸ“‹ Test 22: Get Users (Admin)"
curl -s -X GET "$BASE_URL/users" \
  -H "Authorization: Bearer $ADMIN_TOKEN" | head -c 200
echo -e "\nâœ… Users retrieved by admin\n"

# Test 23: Update Order Status (Admin)
if [ ! -z "$ORDER_ID" ]; then
  echo "ðŸ“‹ Test 23: Update Order Status"
  UPDATE_ORDER_RESPONSE=$(curl -s -X PUT "$BASE_URL/orders/$ORDER_ID" \
    -H "Authorization: Bearer $ADMIN_TOKEN" \
    -H "Content-Type: application/json" \
    -d '{
      "status": "shipped"
    }')

  echo "Order update response: $UPDATE_ORDER_RESPONSE"
  echo -e "âœ… Order status updated\n"
fi

# Test 24: Error Handling - Unauthorized Access
echo "ðŸ“‹ Test 24: Error Handling - Unauthorized Access"
ERROR_RESPONSE=$(curl -s -X GET "$BASE_URL/admin/stats")
echo "Unauthorized access response: $ERROR_RESPONSE"
echo -e "âœ… Error handling tested\n"

# Test 25: Error Handling - Invalid Data
echo "ðŸ“‹ Test 25: Error Handling - Invalid Data"
INVALID_RESPONSE=$(curl -s -X POST "$BASE_URL/auth/login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "invalid-email",
    "password": ""
  }')

echo "Invalid data response: $INVALID_RESPONSE"
echo -e "âœ… Input validation tested\n"

echo "ðŸŽ‰ API Testing Completed!"
echo "=================================================="
echo "Summary:"
echo "âœ… Authentication & Authorization"
echo "âœ… Product Management"
echo "âœ… Category Management"
echo "âœ… Cart & Wishlist"
echo "âœ… Order Management"
echo "âœ… Review System"
echo "âœ… Coupon System"
echo "âœ… User Management"
echo "âœ… Admin Dashboard"
echo "âœ… Error Handling"
echo ""
echo "ðŸ”§ Tokens for manual testing:"
echo "Admin Token: $ADMIN_TOKEN"
echo "User Token: $USER_TOKEN"
echo "Product ID: $PRODUCT_ID"
echo "Category ID: $CATEGORY_ID"
echo "Order ID: $ORDER_ID"
