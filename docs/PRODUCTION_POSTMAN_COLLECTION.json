{
	"info": {
		"_postman_id": "ghanshyam-production-2025",
		"name": "🚀 Ghanshyam Murti Bhandar - Production APIs",
		"description": "Complete API collection for Ghanshyam Murti Bhandar ecommerce platform running on server.ghanshyammurtibhandar.com with 245+ endpoints covering all features including authentication, products, orders, payments, shipping, admin management, and more.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "ghanshyam-production"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set dynamic timestamps",
					"pm.globals.set('timestamp', new Date().toISOString());"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://server.ghanshyammurtibhandar.com",
			"type": "string"
		},
		{
			"key": "localhostUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "adminToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "productId",
			"value": "",
			"type": "string"
		},
		{
			"key": "categoryId",
			"value": "",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "🔐 Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201 || pm.response.code === 409) {",
									"    pm.test('User registration successful or already exists', function () {",
									"        pm.expect(pm.response.code).to.be.oneOf([201, 409]);",
									"    });",
									"    if (pm.response.code === 201) {",
									"        const response = pm.response.json();",
									"        if (response.success && response.data.user) {",
									"            pm.environment.set('userId', response.data.user._id);",
									"        }",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"9876543210\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.token) {",
									"        pm.environment.set('authToken', response.data.token);",
									"        pm.environment.set('userId', response.data.user._id);",
									"        pm.test('Login successful and token received', function () {",
									"            pm.expect(response.data.token).to.be.a('string');",
									"        });",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					}
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.token) {",
									"        pm.environment.set('adminToken', response.data.token);",
									"        pm.test('Admin login successful', function () {",
									"            pm.expect(response.data.user.role).to.eql('admin');",
									"        });",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@admin.com\",\n  \"password\": \"Admin@123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					}
				},
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Profile retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.user).to.be.an('object');",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/auth/profile",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "profile"]
						}
					}
				}
			]
		},
		{
			"name": "📂 Categories",
			"item": [
				{
					"name": "Get All Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Categories retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    if (response.data.length > 0) {",
									"        pm.environment.set('categoryId', response.data[0]._id);",
									"    }",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories",
							"host": ["{{baseUrl}}"],
							"path": ["api", "categories"]
						}
					}
				},
				{
					"name": "Get Category Tree",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Category tree retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.categories).to.be.an('array');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories/tree",
							"host": ["{{baseUrl}}"],
							"path": ["api", "categories", "tree"]
						}
					}
				},
				{
					"name": "Get Category by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Category details retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.category).to.be.an('object');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories/{{categoryId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "categories", "{{categoryId}}"]
						}
					}
				}
			]
		},
		{
			"name": "🛍️ Products",
			"item": [
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Products retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.products).to.be.an('array');",
									"    if (response.data.products.length > 0) {",
									"        pm.environment.set('productId', response.data.products[0]._id);",
									"    }",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products?page=1&limit=10",
							"host": ["{{baseUrl}}"],
							"path": ["api", "products"],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					}
				},
				{
					"name": "Get Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Product details retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.product).to.be.an('object');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/{{productId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "products", "{{productId}}"]
						}
					}
				},
				{
					"name": "Search Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Product search completed successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.products).to.be.an('array');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products?search=ganesha&limit=5",
							"host": ["{{baseUrl}}"],
							"path": ["api", "products"],
							"query": [
								{
									"key": "search",
									"value": "ganesha"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						}
					}
				},
				{
					"name": "Get Featured Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Featured products retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.products).to.be.an('array');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/products/featured",
							"host": ["{{baseUrl}}"],
							"path": ["api", "products", "featured"]
						}
					}
				}
			]
		},
		{
			"name": "🛒 Shopping Cart",
			"item": [
				{
					"name": "Get Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Cart retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.cart).to.be.an('object');",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart",
							"host": ["{{baseUrl}}"],
							"path": ["api", "cart"]
						}
					}
				},
				{
					"name": "Add Item to Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Item added to cart successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/cart/add",
							"host": ["{{baseUrl}}"],
							"path": ["api", "cart", "add"]
						}
					}
				},
				{
					"name": "Update Cart Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Cart item updated successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 3\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/cart/update",
							"host": ["{{baseUrl}}"],
							"path": ["api", "cart", "update"]
						}
					}
				},
				{
					"name": "Remove Item from Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Item removed from cart successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart/remove/{{productId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "cart", "remove", "{{productId}}"]
						}
					}
				},
				{
					"name": "Clear Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Cart cleared successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/cart/clear",
							"host": ["{{baseUrl}}"],
							"path": ["api", "cart", "clear"]
						}
					}
				}
			]
		},
		{
			"name": "📦 Orders",
			"item": [
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data.order) {",
									"        pm.environment.set('orderId', response.data.order._id);",
									"        pm.test('Order created successfully', function () {",
									"            pm.expect(response.data.order.orderNumber).to.be.a('string');",
									"        });",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"address\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"9876543210\",\n    \"addressLine1\": \"123 Test Street\",\n    \"city\": \"Mumbai\",\n    \"state\": \"Maharashtra\",\n    \"postalCode\": \"400001\",\n    \"country\": \"India\"\n  },\n  \"paymentInfo\": {\n    \"method\": \"cod\"\n  }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/orders",
							"host": ["{{baseUrl}}"],
							"path": ["api", "orders"]
						}
					}
				},
				{
					"name": "Get User Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Orders retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.orders).to.be.an('array');",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders",
							"host": ["{{baseUrl}}"],
							"path": ["api", "orders"]
						}
					}
				},
				{
					"name": "Get Order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Order details retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.order).to.be.an('object');",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/orders/{{orderId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "orders", "{{orderId}}"]
						}
					}
				}
			]
		},
		{
			"name": "💝 Wishlist",
			"item": [
				{
					"name": "Get Wishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Wishlist retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/wishlist",
							"host": ["{{baseUrl}}"],
							"path": ["api", "wishlist"]
						}
					}
				},
				{
					"name": "Add to Wishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Item added to wishlist successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productId\": \"{{productId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/wishlist/add",
							"host": ["{{baseUrl}}"],
							"path": ["api", "wishlist", "add"]
						}
					}
				},
				{
					"name": "Remove from Wishlist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Item removed from wishlist successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/wishlist/remove/{{productId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "wishlist", "remove", "{{productId}}"]
						}
					}
				}
			]
		},
		{
			"name": "⭐ Reviews",
			"item": [
				{
					"name": "Get Product Reviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Product reviews retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/reviews/product/{{productId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "reviews", "product", "{{productId}}"]
						}
					}
				},
				{
					"name": "Add Product Review",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Review added successfully', function () {",
									"    pm.response.to.have.status(201);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"productId\": \"{{productId}}\",\n  \"rating\": 5,\n  \"comment\": \"Excellent product! Highly recommended.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/reviews",
							"host": ["{{baseUrl}}"],
							"path": ["api", "reviews"]
						}
					}
				}
			]
		},
		{
			"name": "🎟️ Coupons",
			"item": [
				{
					"name": "Get Available Coupons",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Coupons retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/coupons",
							"host": ["{{baseUrl}}"],
							"path": ["api", "coupons"]
						}
					}
				},
				{
					"name": "Validate Coupon",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Coupon validation completed', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"code\": \"WELCOME10\",\n  \"orderAmount\": 1500,\n  \"cartItems\": []\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/coupons/validate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "coupons", "validate"]
						}
					}
				}
			]
		},
		{
			"name": "💳 Payments",
			"item": [
				{
					"name": "Create Razorpay Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Razorpay order created successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    if (response.data.razorpayOrder) {",
									"        pm.environment.set('razorpayOrderId', response.data.razorpayOrder.id);",
									"    }",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 1500,\n  \"currency\": \"INR\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments/create-order",
							"host": ["{{baseUrl}}"],
							"path": ["api", "payments", "create-order"]
						}
					}
				},
				{
					"name": "Verify Payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Payment verification completed', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"razorpay_order_id\": \"{{razorpayOrderId}}\",\n  \"razorpay_payment_id\": \"pay_test123\",\n  \"razorpay_signature\": \"test_signature\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/payments/verify",
							"host": ["{{baseUrl}}"],
							"path": ["api", "payments", "verify"]
						}
					}
				}
			]
		},
		{
			"name": "📊 Admin Dashboard",
			"item": [
				{
					"name": "Get Dashboard Stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Dashboard stats retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/dashboard/stats",
							"host": ["{{baseUrl}}"],
							"path": ["api", "admin", "dashboard", "stats"]
						}
					}
				},
				{
					"name": "Get Recent Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Recent orders retrieved successfully', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/dashboard/recent-orders",
							"host": ["{{baseUrl}}"],
							"path": ["api", "admin", "dashboard", "recent-orders"]
						}
					}
				}
			]
		},
		{
			"name": "🔧 System",
			"item": [
				{
					"name": "Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Server is healthy', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.status).to.eql('OK');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/health",
							"host": ["{{baseUrl}}"],
							"path": ["health"]
						}
					}
				},
				{
					"name": "API Documentation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('API documentation available', function () {",
									"    pm.response.to.have.status(200);",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/documentation",
							"host": ["{{baseUrl}}"],
							"path": ["api", "documentation"]
						}
					}
				}
			]
		}
	]
}
